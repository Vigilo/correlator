Apparently a multiprocessing.Pool passed between processes becomes unuseable.
Calling map (not map_async) blocks when using such a pool. The pool was created in the parent and used in the child.

With multiprocessing as the main entry point, killing all processes is not done by default. We could implement twisted L{IService}s for processes, except that processes can be created implicitly as part of a pool.

Override sys.excepthook.
Or just override the default SIGINT handler, which python sets to throwing a KeyboardInterrupt exception.
Or see if twistd does better.
Or write an atexit function.

To kill from the outside, killall -g runsv can kill a process group (SIGTERM).
Ctrl-C from a shell does the same with SIGINT.

