[bus]
# Le traffic XMPP doit-il être journalisé ?
log_traffic = False

# Nom d'hôte ou adresse IP du serveur XMPP.
host = localhost

# Service de publication XMPP, en général,
# de la forme "pubsub.<serveur XMPP>".
service = pubsub.localhost

# Identifiant de connexion Jabber.
jid = correlator@localhost

# Mot de passe correspondant.
password = correlator

# Nœuds XMPP souscrits (surveillés).
watched_topics = /home/localhost/connector-nagios/event, /home/localhost/connector-nagios/downtime

# Nœuds XMPP gérés (dont nous sommes propriétaire).
owned_topics = /home/localhost/correlator/event, /home/localhost/correlator/aggr, /home/localhost/correlator/delaggr, /home/localhost/correlator/state

[database]
# URL d'accès à la base de données.
sqlalchemy_url = postgres://vigilo:vigilo@localhost/vigilo

# Préfixe des tables.
db_basename = vigilo_

[connector]
# Fichier de sauvegarde locale des messages
# en cas d'échec d'une transmission.
backup_file = @LOCALSTATEDIR@/lib/vigilo/correlator/correlator.sqlite

# Table de sauvegarde pour les messages
# provenant du bus XMPP.
backup_table_from_bus = frombus

# Table de sauvegarde pour les messages
# à destination du bus XMPP.
backup_table_to_bus = tobus

[correlator]
# URL de la base de données contenant
# les contextes de corrélation.
context_db_url = sqlite:///:memory:

# Délai d'expiration par défaut des contextes.
context_timeout = 60.

# Adresse IP du serveur memcached (optionnelle).
memcached_host = 127.0.0.1

# Port du serveur memcached.
memcached_port = 11215

# Activation du mode débogage de la connexion
# à memcached.
memcached_debug = False

# Validation des messages reçus.
validate_messages = False

# JID du connecteur qui reçoit les notifications
# concernant les services de haut niveau.
nagios_hls_jid = connector-nagios@localhost

# Nom de l'hôte symbolisant les services
# de haut niveau dans Nagios.
nagios_hls_host = High-Level-Services

# Délai maximum d'exécution pour
# chaque règle de corrélation.
rules_timeout = 2

# Niveau de débogage pour l'envoi des événements
# corrélés aux journaux système.
syslog_data_level = 20

# La priorité associée à une alerte sur un
# hôte/service technique qui n'impacte aucun
# service de haut niveau.
unknown_priority_value = 4

# Indique si les alertes sont triées par
# priorité croissante ou décroissante.
priority_order = asc

# Nombre minimum et maximum de processus dédiés
# à l'exécution des règles de corrélation.
min_rule_runners = 0
max_rule_runners = 4

# Durée en secondes d'inactivité après laquelle
# les rule runners s'arrêtent.
# Si ce délai est trop bas, cela nuira aux performances.
# Si ce délai est trop haut, le corrélateur occupera des
# ressources inutilement par moments.
rule_runners_max_idle = 20

# Délai en secondes entre les vérifications de la présence
# de messages en attente de retransmission.
queue_delay = 0.1

[rules]
# Règles de corrélation actives.
hls_deps=vigilo.correlator.rules.hls_deps:HighLevelServiceDepsRule
lls_deps=vigilo.correlator.rules.lls_deps:LowLevelServiceDepsRule
occ_count=vigilo.correlator.rules.update_occurrences_count:UpdateOccurrencesCountRule
priority=vigilo.correlator.rules.priority:PriorityRule

[publications]
# Indique le nœud cible du message en fonction du type.
event = /home/localhost/correlator/event
aggr = /home/localhost/correlator/aggr
delaggr = /home/localhost/correlator/delaggr
state = /home/localhost/correlator/state
command = /home/localhost/correlator/nagios

[loggers]
keys=root,twisted,multiprocessing,correlation

[handlers]
keys=console,syslog,correlation

[formatters]
keys=consoleFormatter,syslogFormatter,correlationFormatter

[logger_root]
level=INFO
handlers=syslog,console

[logger_twisted]
level=INFO
qualname=twisted
propagate=0
handlers=syslog,console

[logger_multiprocessing]
level=INFO
qualname=multiprocessing
propagate=1
handlers=syslog,console

[logger_correlation]
level=INFO
qualname=vigilo.correlator.syslog
propagate=0
handlers=correlation,console

[handler_console]
class=StreamHandler
level=DEBUG
formatter=consoleFormatter
args=(sys.stdout, )

[handler_syslog]
class=handlers.SysLogHandler
level=DEBUG
formatter=syslogFormatter
# Le premier argument correspond à l'emplacement du syslog.
# Il peut s'agir d'un fichier (ex : socket Unix, '/dev/log')
# ou d'une adresse IP avec un port, auquel cas il faut saisir
# le tout sous forme de tuple (args=('127.0.0.1', 514), 'daemon').
#
# Le 2ème argument correspond à la facility à utiliser lors
# de l'envoi à syslog (voir logger(1) pour la liste des noms
# des facilities).
args='/dev/log', 'daemon'

[handler_correlation]
class=handlers.SysLogHandler
level=DEBUG
formatter=correlationFormatter
# Le premier argument correspond à l'emplacement du syslog.
# Il peut s'agir d'un fichier (ex : socket Unix, '/dev/log')
# ou d'une adresse IP avec un port, auquel cas il faut saisir
# le tout sous forme de tuple (args=('127.0.0.1', 514), 'daemon').
#
# Le 2ème argument correspond à la facility à utiliser lors
# de l'envoi à syslog (voir logger(1) pour la liste des noms
# des facilities).
args='/dev/log', 'daemon'

[formatter_consoleFormatter]
format=[%(created)f] %(levelname)s::%(processName)s::%(name)s::%(message)s
datefmt=
class=vigilo.common.logging.VigiloFormatter

[formatter_syslogFormatter]
#format=%(processName)s[%(process)d]: [%(multiprocessName)s] %(levelname)s::%(name)s::%(message)s
format=%(processName)s[%(process)d]: %(levelname)s::%(name)s::%(message)s
datefmt=
class=vigilo.common.logging.VigiloFormatter

[formatter_correlationFormatter]
format=%(processName)s: %(message)s
datefmt=
class=vigilo.common.logging.VigiloFormatter
